<resources>
    <string name="app_name">JetPack_Note</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="nav_header_title">Android Studio</string>
    <string name="nav_header_subtitle">Android Architecture Components Note</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="action_settings">Settings</string>
    <string name="action_website">浏览器打开</string>
    <string name="action_share">分享</string>
    <string name="action_copy">复制链接</string>

    <string name="menu_home">首页</string>
    <string name="menu_code">代码</string>
    <string name="menu_lifecycle">Lifecycles</string>
    <string name="menu_navigation">Navigation</string>
    <string name="menu_live_data">LiveData</string>
    <string name="menu_view_model">ViewModel</string>
    <string name="menu_paging">Paging</string>
    <string name="menu_room">Room</string>
    <string name="menu_work_manager">WorkManager</string>

    <string name="menu_setting">设置</string>
    <string name="menu_about">关于</string>
    <string name="nav_bottom">BottomNavigation</string>
    <string name="drawerlayout_nav">DrawerLayout_Nav</string>
    <string name="navigation_desc">处理应用内导航所需的一切</string>
    <string name="title_activity_nav_sample">NavSampleActivity</string>
    <string name="menu_gallery">Gallery</string>
    <string name="menu_slideshow">Slideshow</string>
    <string name="menu_tools">Tools</string>
    <string name="menu_share">Share</string>
    <string name="menu_send">Send</string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="sample_desc">具体使用可查看MainActivity的实现方式</string>
    <string name="smaple_file_desc">MainActivity \n navigation/navigation_main.xml \n menu/activtiy_main_drawer.xml
    </string>
    <string name="title_activity_bottom_nav_sample">BottomNavSampleActivity</string>
    <string name="title_home">首页</string>
    <string name="title_dashboard">工作台</string>
    <string name="title_args">带参数传递的Fragment</string>
    <string name="title_notifications">通知</string>
    <string name="navigation_sample_jump">跳转</string>
    <string name="navigation_sample_jump_action">跳转(Action)</string>
    <string name="navigation_sample_jump_arguments_normal">跳转(基本类型参数)</string>
    <string name="navigation_sample_jump_arguments_bean">跳转(实体类参数)</string>
    <string name="navigation_sample_jump_go_home">回到首页</string>
    <string name="navigation_sample_deep_link">发送深层链接</string>
    <string name="navigation_sample_deep_link_hint">请输入深层链接参数</string>
    <string name="deep_link_args_hint">Deep Link 传递参数会显示在这...</string>
    <string name="clip_hint">已复制到剪切板</string>
    <string name="deeplink_hint">已发送深层链接通知，请在通知栏查看</string>
    <string name="clear">清空</string>
    <string name="close">关闭</string>
    <string name="move">拖动</string>

    <string name="lifecycle_codes">
        static class BoundLocationListener implements LifecycleObserver {\n"
        "        private final Context mContext;\n"
        "        private LocationManager mLocationManager;\n"
        "        private final LocationListener mListener;\n"
        "\n"
        "        BoundLocationListener(LifecycleOwner lifecycleOwner,\n"
        "                              LocationListener listener, Context context) {\n"
        "            mContext = context;\n"
        "            mListener = listener;\n"
        "            lifecycleOwner.getLifecycle().addObserver(this);\n"
        "        }\n"
        "\n"
        "        @OnLifecycleEvent(Lifecycle.Event.ON_RESUME)\n"
        "        void addLocationListener() {\n"
        "            mLocationManager = (LocationManager) mContext.getSystemService(Context.LOCATION_SERVICE);\n"
        "            mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, mListener);\n"
        "            FloatWindowUtils.INSTANCE.addViewContent(\"ON_RESUME--开启定位监听\");\n"
        "            Location lastLocation = mLocationManager.getLastKnownLocation(\n"
        "                    LocationManager.GPS_PROVIDER);\n"
        "            if (lastLocation != null) {\n"
        "                mListener.onLocationChanged(lastLocation);\n"
        "            }\n"
        "        }\n"
        "\n"
        "\n"
        "        @OnLifecycleEvent(Lifecycle.Event.ON_PAUSE)\n"
        "        void removeLocationListener() {\n"
        "            if (mLocationManager == null) {\n"
        "                return;\n"
        "            }\n"
        "            mLocationManager.removeUpdates(mListener);\n"
        "            mLocationManager = null;\n"
        "            FloatWindowUtils.INSTANCE.addViewContent(\"ON_PAUSE--停止定位监听\");\n"
        "        }\n"
        "    }</string>
    <string name="start_monitor">开启监听</string>
    <string name="start_location">开启定位</string>
    <string name="location_msg">位置信息</string>
    <string name="recommend">提示：</string>
    <string name="lifecycles_hint">1. 开启监听按钮，并打开悬浮控制台 \n2.开启定位后，会在控制台打印出监听的生命周期状态\n3. 返回桌面或者进入后台，查看控制台输出变化</string>
    <string name="demo">Demo 演示</string>
    <string name="other">其他</string>
</resources>
